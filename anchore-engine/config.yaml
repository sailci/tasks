# Anchore Engine default configuration file bundled into the container. These values should provide a simple starting point
# To fully customize configuration, provide a different config.yaml to container at startup by mounting a directory
# at /config that has the config.yaml


# These defaults are intended to serve a deployment where each service is started in its own container with individual overrides
# for values like the endpoint hostname. This config provides a uniform setting of those such that env vars passed in from
# execution will overwrite values needed.

service_dir: ${ANCHORE_SERVICE_DIR}
tmp_dir: /analysis_scratch
log_level: INFO
cleanup_images: true

# When set, if a registry credential username is set to 'iamauto' for an ecr registry, the engine will
# use whatever aws creds are available in the standard boto search path (.aws, env, etc)
allow_awsecr_iam_auto: true
host_id: "${ANCHORE_HOST_ID}"
internal_ssl_verify: false
auto_restart_services: false

# metrics:
#   enabled: ${ANCHORE_ENABLE_METRICS}

# Uncomment if you have a local endpoint that can accept
# notifications from the anchore-engine, as configured below
# This section is only required on the catalog service containers
# webhooks:
#   webhook_user: null
#   webhook_pass: null
#   ssl_verify: false
#   general:
#     url: ${ANCHORE_WEBHOOK_DESTINATION_URL}
#   policy_eval: {}
#   event_log: {}

# A feeds section is available for override, but shouldn't be
# needed. By default, the 'admin' credentials are used if present,
# otherwise anonymous access for feed sync is used
#
# feeds:
#   # If set to false, instruct anchore-engine to skip (all) feed sync operations
#   sync_enabled: ${ANCHORE_FEEDS_ENABLED}
#   selective_sync:
#     # If enabled only sync specific feeds instead of all.
#     enabled: ${ANCHORE_FEEDS_SELECTIVE_ENABLED}
#     feeds:
#       vulnerabilities: true
#       # Warning: enabling the packages and nvd sync causes the service to require much
#       #   more memory to do process the significant data volume. We recommend at least 4GB available for the container
#       packages: false
#       nvd: false
#       # Enabling snyk syncs snyk vulnerability data from an on-premise anchore enterprise feeds service. Please contact
#       # anchore support for finding out more about this service
#       snyk: false
#   anonymous_user_username: anon@ancho.re
#   anonymous_user_password: pbiU2RYZ2XrmYQ
#   url: ${ANCHORE_FEEDS_URL}
#   client_url: ${ANCHORE_FEEDS_CLIENT_URL}
#   token_url: ${ANCHORE_FEEDS_TOKEN_URL}
#   connection_timeout_seconds: 3
#   read_timeout_seconds: 60


# As of 0.3.0 this section is used instead of the credentials.users section
# Can be omitted and will default to 'foobar' on db initialization
default_admin_password: ${ANCHORE_ADMIN_PASSWORD}

# Can be ommitted and will default to 'admin@myanchore'
default_admin_email: ${ANCHORE_ADMIN_EMAIL}

credentials:
  database:
    db_connect: 'postgresql+pg8000://${ANCHORE_DB_USER}:${ANCHORE_DB_PASSWORD}@${ANCHORE_DB_HOST}:${ANCHORE_DB_PORT}/${ANCHORE_DB_NAME}'
    db_connect_args:
      timeout: 120
      ssl: false
    db_pool_size: 30
    db_pool_max_overflow: 100
services:
  apiext:
    enabled: true
    require_auth: true
    endpoint_hostname: '${ANCHORE_ENDPOINT_HOSTNAME}'
    listen: '0.0.0.0'
    port: 8228
    authorization_handler: ${ANCHORE_AUTHZ_HANDLER}
    authorization_handler_config:
      endpoint: ${ANCHORE_EXTERNAL_AUTHZ_ENDPOINT}
  kubernetes_webhook:
    enabled: false
    require_auth: false
    endpoint_hostname: '${ANCHORE_ENDPOINT_HOSTNAME}'
    listen: '0.0.0.0'
    port: 8229
    authorization_handler: ${ANCHORE_AUTHZ_HANDLER}
    authorization_handler_config:
      endpoint: ${ANCHORE_EXTERNAL_AUTHZ_ENDPOINT}
  catalog:
    enabled: true
    require_auth: true
    endpoint_hostname: '${ANCHORE_ENDPOINT_HOSTNAME}'
    listen: '0.0.0.0'
    port: 8230
# NOTE: use the below external_* parameters to define the port/tls
# setting that will allow other internal services to access this
# service - if left unset services will use the above,
# e.g. http://<endpoint_hostname>:<port>
    external_port: ${ANCHORE_EXTERNAL_PORT}
    external_tls: false
    archive:
      compression:
        enabled: false
        min_size_kbytes: 100
      storage_driver:
        name: db
        config: {}
    cycle_timer_seconds: '1'
    cycle_timers:
      image_watcher: 3600
      policy_eval: 3600
      vulnerability_scan: 14400
      analyzer_queue: 1
      notifications: 30
      service_watcher: 15
      policy_bundle_sync: 300
      repo_watcher: 60
    event_log:
      notification:
        enabled: ${ANCHORE_EVENTS_NOTIFICATIONS_ENABLED}
        # (optional) notify events that match these levels. If this section is commented, notifications for all events are sent
        level:
        - error
  simplequeue:
    enabled: true
    require_auth: true
    endpoint_hostname: '${ANCHORE_ENDPOINT_HOSTNAME}'
    listen: '0.0.0.0'
    port: 8231
    external_port: ${ANCHORE_EXTERNAL_PORT}
    external_tls: false
  analyzer:
    enabled: true
    require_auth: true
    cycle_timer_seconds: 1
    max_threads: 1
    analyzer_driver: 'nodocker'
    endpoint_hostname: '${ANCHORE_ENDPOINT_HOSTNAME}'
    listen: '0.0.0.0'
    port: 8232
    external_port: ${ANCHORE_EXTERNAL_PORT}
    external_tls: false
  policy_engine:
    enabled: true
    require_auth: true
    endpoint_hostname: '${ANCHORE_ENDPOINT_HOSTNAME}'
    listen: '0.0.0.0'
    port: 8233
    external_port: ${ANCHORE_EXTERNAL_PORT}
    external_tls: false
    cycle_timer_seconds: 1
    cycle_timers:
      feed_sync: ${ANCHORE_FEED_SYNC_INTERVAL_SEC} # 6 hours between feed syncs
      feed_sync_checker: 3600 # 1 hour between checks to see if there needs to be a task queued
